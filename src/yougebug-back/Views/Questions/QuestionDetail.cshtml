@model Domain.Questions.Results.QuestionDetailForClient;
@{
    const int ENABLED_STATE = (int)Domain.Questions.Question.QuestionState.Enabled;
}

@section Style {
    <style>
        .comment-box {
            min-width: 400px;
            border-left: 3px solid #0064d0;
        }
    </style>
}

<div class="row">
    <div class="col-2 d-none d-lg-block" style="width: 150px;">
        @await Html.PartialAsync("_LeftNav")
    </div>

    <div class="col-sm-12 col-lg-8 pb-3 h-100" style="max-width: 1300px">
        <div class="d-flex pt-4 pb-4">
            <div class="w-100">
                <span class="h3 flex-grow-1">@Model.Title</span>
                @if (Model.IsSelf)
                {
                    @switch (Model.State.Key)
                    {
                        case ENABLED_STATE:
                            <span class="ml-3 badge badge-primary">@Model.State.Value</span>; break;
                        case (int)Domain.Questions.Question.QuestionState.Back:
                            <span class="ml-3 badge badge-danger">@Model.State.Value</span>; break;
                        case (int)Domain.Questions.Question.QuestionState.ToAudit:
                            <span class="ml-3 badge badge-warning">@Model.State.Value</span>; break;
                        default:
                            <span class="ml-3 badge">@Model.State.Value</span>
                            break;
                    }
                }
            </div>
            <div style="min-width: 90px;">
                <a class="btn btn-primary" href="/ask">我要提问</a>
            </div>
        </div>
        <div class="d-flex align-items-end border-bottom border-light pb-1">
            <span class="text-secondary">提问于：</span>@Model.CreateDate
            <span class="text-secondary ml-2">最后活跃于：</span>@Model.Actived
            <span class="text-secondary ml-2">浏览：</span>@Model.Views 次
            @if (Model.IsSelf)
            {
                <div class="flex-grow-1 d-flex flex-row-reverse">
                    <div class="btn-group">
                        <a class="btn btn-outline-primary" href="/questions/@Model.Id/edit">修改</a>
                        <button type="button" class="btn btn-outline-primary dropdown-toggle dropdown-toggle-split" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            <span class="sr-only">Toggle Dropdown</span>
                        </button>
                        <div class="dropdown-menu dropdown-menu-right">
                            <a class="dropdown-item text-danger" href="javascript:;" data-toggle="modal" data-target="#deleteBox">删除</a>
                        </div>

                        <div class="modal fade" id="deleteBox" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                            <div class="modal-dialog" role="document">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="exampleModalLabel">确认删除？</h5>
                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                            <span aria-hidden="true">&times;</span>
                                        </button>
                                    </div>
                                    <div class="modal-body">
                                        删除之后不可恢复，是否确认删除？
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-outline-secondary" data-dismiss="modal">取消</button>
                                        <button type="button" class="btn btn-danger" id="btn_delete" onclick="deleteQuestion(@Model.Id)">删除</button>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            }
        </div>
        <div class="mt-3 d-flex">
            <div class="d-flex flex-column text-center" style="width: 50px;">
                <div>
                    <img src="~/icons/chevron-up.svg" class="pointer rounded shadow-hov" alt="赞同" height="40" name="questionVotes" onclick="questionVotesUp(@Model.Id)" />
                </div>
                <span class="h3 text-secondary" id="spn_questionVotes">@Model.Votes</span>
                <div>
                    <img src="~/icons/chevron-down.svg" class="pointer rounded shadow-hov" alt="不赞同" height="40" name="questionVotes" onclick="questionVotesDown(@Model.Id)" />
                </div>
            </div>
            <div class="d-flex flex-column mt-2 ml-4 w-100">
                <div id="d-description-content" style="max-width: 780px;">
                    @Model.Description
                </div>
                <div class="d-flex mt-2">
                    <div>
                        @foreach (string tag in Model.Tags)
                        {
                            <a class="tag" href="/tags/@tag" target="_blank">@tag</a>
                        }
                    </div>
                    <div class="flex-grow-1 d-flex flex-row-reverse mr-4">
                        <div class="d-flex flex-column">
                            <div class="d-flex mt-2">
                                <a href="/@Model.User.Account" target="_blank">
                                    <img src="@Model.User.Avatar" alt="名字" width="35" height="35" class="img-thumbnail mr-2" />
                                </a>
                                <div class="d-flex flex-column">
                                    <a href="/@Model.User.Account" target="_blank">@Model.User.Account</a>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="mb-3 d-flex flex-column">
            <div class="d-flex flex-row-reverse">
                <button class="btn btn-link text-danger small" type="button" id="btn-collapse-report" data-toggle="collapse" data-target="#d-reportBox" aria-expanded="false" aria-controls="d-reportBox" onclick="showReportBox()">举报</button>
                <button class="btn btn-link text-secondary small" type="button" data-toggle="collapse" data-target="#d-commentBox" aria-expanded="false" aria-controls="d-commentBox" onclick="showCommentBox()">追问</button>
            </div>

            <div class="collapse multi-collapse" id="d-reportBox">
                <!-- 举报框 -->
                <div class="card card-body">
                    <div class="input-group mb-1">
                        <div class="input-group-prepend">
                            <label class="input-group-text" for="sel-reportReason">举报理由</label>
                        </div>
                        <select class="custom-select" id="sel-reportReason">
                            <option selected value="提问不明确">提问不明确</option>
                            <option value="无关内容">无关内容</option>
                        </select>
                    </div>
                    <textarea class="form-control" id="txt-content" rows="2" placeholder="请输入具体举报描述"></textarea>
                    <button class="btn btn-danger" id="btn_report" onclick="report()">提交举报</button>
                </div>
            </div>
            <div class="collapse multi-collapse" id="d-commentBox">
                <!-- 追问框 -->
                <div class="card card-body">
                    <textarea class="form-control" id="txt_comment" rows="5" placeholder="请输入追问内容，不超过 128 个字"></textarea>
                    <button class="btn btn-primary" id="btn_comment" onclick="comment()">提交追问</button>
                </div>
            </div>
        </div>

        <div class="d-flex justify-content-end">
            <div class="comment-box border-primary rounded p-2 w-50" id="d-comment-box" data-children=".item">
                <!-- 追问 -->
                <p class="h6 text-primary">
                    <a data-toggle="collapse" data-parent="#d-comment-box" href="#comment-box" aria-expanded="true" aria-controls="comment-box">
                        @Model.Comments.Length 条追问
                    </a>
                </p>
                <div id="comment-box" class="collapse" role="tabpanel">
                    @foreach (var comment in Model.Comments)
                    {
                        <p class="border-primary border-bottom mb-1">@comment</p>
                    }
                </div>
            </div>
        </div>

        <div class="d-flex flex-column">
            <div class="mt-3 mb-2 border-bottom">
                <h4>
                    <span class="tab">
                        回答
                    </span>
                </h4>
            </div>
            <div class="p-1">
                <div>
                    @await Html.PartialAsync("_Paginator", Model.Page)
                </div>

                @if (Model.State.Key == ENABLED_STATE && Model.Page.TotalRows == 0)
                {
                    <div class="ml-3">
                        当前还没有回答，您可以
                        <a href="javascript:;" onclick="writeYourAnswer()">写下您的答案</a>
                    </div>
                }

                @foreach (var answer in Model.Page.GetList<Domain.Answers.Results.AnswerItem>())
                {
                    <div class="flex-column">
                        <div class="d-flex pt-3 pb-3">
                            <div class="d-flex flex-column text-center">
                                <div>
                                    <img src="~/icons/chevron-up.svg" class="pointer rounded shadow-hov" alt="赞同" height="40" name="answerVotes_@answer.Id" onclick="answerVotesUp(@answer.Id)" />
                                </div>
                                <span class="h3 text-secondary" id="spn_answerVotes_@answer.Id">@answer.Votes</span>
                                <div>
                                    <img src="~/icons/chevron-down.svg" class="pointer rounded shadow-hov" alt="不赞同" height="40" name="answerVotes_@answer.Id" onclick="answerVotesDown(@answer.Id)" />
                                </div>
                            </div>
                            <div class="d-flex flex-column ml-4 w-100">
                                <div class="pr-4" name="answer-content" style="overflow-wrap: break-word; max-width: 780px;">
                                    @answer.Content
                                </div>
                                <div class="d-flex flex-row-reverse mr-4 mt-3">
                                    <div class="d-flex flex-column">
                                        <small>回答于：@answer.CreateDate</small>
                                        @if (answer.User.Id == 0)
                                        {
                                            <div class="d-flex mt-2">
                                                回答者：@answer.User.Account
                                            </div>
                                        }
                                        else
                                        {
                                            <div class="d-flex mt-2">
                                                <a href="/@answer.User.Account" target="_blank">
                                                    <img src="@answer.User.Avatar" alt="名字" width="35" height="35" class="img-thumbnail mr-2" />
                                                </a>
                                                <div class="d-flex flex-column">
                                                    <a href="/@answer.User.Account" target="_blank">@answer.User.Account</a>

                                                </div>
                                            </div>
                                        }

                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="dropdown-divider"></div>
                    </div>
                }

                <div>
                    @await Html.PartialAsync("_Paginator", Model.Page)
                </div>
            </div>
        </div>
        @if (Model.State.Key == (int)Domain.Questions.Question.QuestionState.Enabled)
        {
            <div>
                <form>
                    <div id="d_nickName">
                        <label>
                            您当前没有登录，可以
                            <a href="javascript:;" id="a_login">登录</a>
                            或匿名写下答案，但需要审核后才能显示
                        </label>
                        <input type="text" class="form-control" id="txt_nickName" value="匿名" placeholder="昵称或登录" />
                    </div>
                    <label for="txt_answer">你的回答</label>
                    <small class="small">支持 <a href="https://github.com/younghz/Markdown" target="_blank" data-toggle="tooltip" data-placement="bottom" title="什么是 markdown?">markdown</a> 语法</small>
                    <textarea class="form-control" id="txt_answer" rows="10" required placeholder="写下你的答案"></textarea>
                    <div class="d-flex flex-row-reverse">
                        <span class="flex-grow-1 text-right"><strong>认真对待您的答案，请不要写不关联的文字</strong></span>
                        <button type="button" class="btn btn-primary mt-3" id="btn_postAnswer" onclick="newAnswer()">提交</button>
                    </div>

                </form>
            </div>
        }
    </div>

    <div class="col-2 d-none d-lg-block">
        @await Html.PartialAsync("_RightNav")
    </div>
</div>
@section Scripts {
    <script src="~/lib/marked/marked.min.js"></script>
    <script>
        $(function () {
            if (getLoggedCache())
                document.getElementById('d_nickName').setAttribute('hidden', 'hidden');

            document.getElementById('a_login').href = `/login?${GO_TO}=${location.pathname + location.search}`;

            const CONTENT = $('#d-description-content');
            CONTENT.html(marked(CONTENT.text().trim()));

            const ANSWERS = document.getElementsByName("answer-content");
            for (var i = 0; i < ANSWERS.length; i++) {
                const answer = ANSWERS[i];
                const markValue = marked($(answer).text().trim());
                answer.innerHTML = markValue;
            }

            $('[data-toggle="tooltip"]').tooltip()
        });

        function writeYourAnswer() {
            document.getElementById('txt_answer').focus();
        }

        function questionVotesUp(id) {
            disabledQuestionVotes();

            const VOTES_STR = document.getElementById('spn_questionVotes');
            const VOTES = parseInt(VOTES_STR.innerHTML);
            VOTES_STR.innerHTML = VOTES + 1;

            axios.patch(`/questions/${id}/like`);
        }

        function questionVotesDown(id) {
            disabledQuestionVotes();

            const VOTES_STR = document.getElementById('spn_questionVotes');
            const VOTES = parseInt(VOTES_STR.innerHTML);
            VOTES_STR.innerHTML = VOTES - 1;

            axios.patch(`/questions/${id}/unlike`);
        }
        function disabledQuestionVotes() {
            const ELE_VOTES = document.getElementsByName('questionVotes');
            for (var i = 0; i < ELE_VOTES.length; i++) {
                const _this = ELE_VOTES[i];
                _this.removeAttribute('onclick');
                _this.classList.remove('shadow-hov');
                _this.style.cursor = 'default';
            }
        }

        function answerVotesUp(id) {
            disabledAnswerVotes(id);

            const VOTES_STR = document.getElementById('spn_answerVotes_' + id);
            const VOTES = parseInt(VOTES_STR.innerHTML);
            VOTES_STR.innerHTML = VOTES + 1;

            axios.patch(`/answers/${id}/like`);
        }

        function answerVotesDown(id, _this) {
            disabledAnswerVotes(id);

            const VOTES_STR = document.getElementById('spn_answerVotes_' + id);
            const VOTES = parseInt(VOTES_STR.innerHTML);
            VOTES_STR.innerHTML = VOTES - 1;

            axios.patch(`/answers/${id}/unlike`);
        }
        function disabledAnswerVotes(id) {
            const ELE_VOTES = document.getElementsByName('answerVotes_' + id);
            for (var i = 0; i < ELE_VOTES.length; i++) {
                const _this = ELE_VOTES[i];
                _this.removeAttribute('onclick');
                _this.classList.remove('shadow-hov');
                _this.style.cursor = 'default';
            }
        }

        function newAnswer() {

            const NEW_ANSWER = {
                content: $('#txt_answer').val(),
                nickName: $('#txt_nickName').val().trim(),
                isLogin: getLoggedCache() ? true : false
            };

            disabled('btn_postAnswer', '提交中');
            axios.post('/questions/@Model.Id/answer', NEW_ANSWER)
                .then(function (resp) {
                    if (resp.status === 200) {
                        if (resp.data.message) {
                            showAlert(resp.data.message, '');
                        }
                        location.reload();
                    } else {
                        showAlert(resp.data.message);
                    }
                    enabled('btn_postAnswer', '提交');
                })
                .catch(function (err) {
                    if (err.response.status === 401) {
                        setLogout();
                        showAlert('登录超时，请重新登录或匿名提交');
                    }
                    enabled('btn_postAnswer', '提交失败，请重试');
                });
        }

        function deleteQuestion(id) {
            disabled('btn_delete', '删除中');
            axios.delete('/questions/' + id)
                .then(function (resp) {
                    if (resp.status === 200) {
                        //  showAlert('删除成功', '', 'javascript:history.back();');
                        location.href = `/questions?${ALERT_PRIMARY}=成功删除提问`;
                    } else {
                        showAlert(resp.data.message);
                    }
                })
                .catch(function (err) {
                    if (err.response.status === 401) {
                        setLogout();
                        showAlert('登录超时，请重新登录或匿名提交');
                    }
                    enabled('btn_delete', '删除');
                });
        }



        /*
         * 举报和追问
         */

        function showReportBox() {
            $('#d-commentBox').collapse('hide');
        }

        function showCommentBox() {
            $('#d-reportBox').collapse('hide');
        }

        function report() {
            disabled('btn_report', '举报中...');

            const DATA = {
                reason: $('#sel-reportReason').val().trim(),
                description: $('#txt-content').val().trim()
            };

            axios.post('/questions/@Model.Id/report', DATA)
                .then(function (resp) {
                    if (resp.status === 200) {
                        $('#d-reportBox').collapse('hide');
                        $('#btn-collapse-report').html('举报成功');
                        disabled('btn-collapse-report');
                    } else {
                        showAlert(resp.data.message);
                    }
                    enabled('btn_report', '举报');
                })
                .catch(function (err) {
                    if (err.response.status === 401) {
                        setLogout();
                        showAlert('登录超时，请重新登录或匿名提交');
                    }
                    enabled('btn_report', '举报');
                });
        }

        function comment() {
            const COMMENT_MAX_LENGTH = 128;
            disabled('btn_comment');

            const COMMENT = $('#txt_comment').val().trim();
            if (!COMMENT) {
                showAlert('请填入追问内容');
                $('#txt_comment').focus();
                enabled('btn_comment');
                return;
            }
            if (COMMENT.length > COMMENT_MAX_LENGTH) {
                showAlert(`追问内容不能超过${COMMENT_MAX_LENGTH}个字`);
                return;
            }

            axios.post('/questions/@Model.Id/comment', { content: COMMENT })
                .then(function (resp) {
                    if (resp.status === 200) {
                        $('#d-commentBox').collapse('hide');
                        let commentlist = document.getElementById('d-comment-box');
                        commentlist.innerHTML += `<p class="border-primary border-bottom mb-1">${COMMENT}</p>`;

                    } else {
                        showAlert(resp.data.message);
                    }
                    enabled('btn_comment');
                })
                .catch(function (err) {
                    if (err.response.status === 401) {
                        //setLogout();
                        showAlert('登录超时，请重新登录或匿名提交', '', 'setLogout()');
                    }
                    enabled('btn_comment');
                });
        }

    </script>
}
